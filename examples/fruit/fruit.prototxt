name: "Fruit_Net"
layers {
  name: "fruit"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "examples/fruit/fruit_train_leveldb"
    batch_size: 60
  }
  transform_param {
    mean_file: "examples/fruit/mean.binaryproto"
  }
  include: { phase: TRAIN }
}
layers {
  name: "fruit"
  type: DATA
  top: "data"
  top: "label"
  data_param {
    source: "examples/fruit/fruit_test_leveldb"
    batch_size: 64
  }
  transform_param {
    mean_file: "examples/fruit/mean.binaryproto"
  }
  include: { phase: TEST }
}
layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 1
  blobs_lr: 2
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.048507125007266595
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu1"
  type: "PReLU"
  bottom: "conv1"
  top: "conv1"
}

layers {
  name: "pool1"
  type: POOLING
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "pool1"
  top: "conv2"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1.
  weight_decay: 0.
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.034299717028501764
    }
    bias_filler {
      type: "constant"
    }
  }
}
layers {
  name: "relu2"
  type: "PReLU"
  bottom: "conv2"
  top: "conv2"
}
layers {
  name: "cccp3"
  type: CONVOLUTION
  bottom: "conv2"
  top: "cccp3"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 64
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std:  0.034299717028501764
    }
    bias_filler {
      type: "constant"
      value: 0.01
    }
  }
}
layers {
  name: "relu_cccp3"
   type: "PReLU"
  bottom: "cccp3"
  top: "cccp3"
}
layers {
  name: "cccp4"
  type: CONVOLUTION
  bottom: "cccp3"
  top: "cccp4"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 64
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.034299717028501764
    }
    bias_filler {
      type: "constant"
      value: 0.01
    }
  }
}
layers {
  name: "relu_cccp4"
   type: "PReLU"
  bottom: "cccp4"
  top: "cccp4"
}
layers {
  name: "pool2"
  type: POOLING
  bottom: "cccp4"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "drop6"
  type: DROPOUT
  bottom: "pool2"
  top: "pool2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "pool2"
  top: "conv3"
  blobs_lr: 1.
  blobs_lr: 2.
  weight_decay: 1.
  weight_decay: 0.
  convolution_param {
    num_output: 90
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.04820677
    }
    bias_filler {
      type: "constant"
      value: 0.01
    }
  }
}
layers {
  name: "relu3"
  type: "PReLU"
  bottom: "conv3"
  top: "conv3"
}
layers {
  name: "drop3"
  type: "Dropout"
  bottom: "conv3"
  top: "conv3" 
  dropout_param{
   dropout_ratio:0.3 
  }
}
layers {
  name: "cccp5"
  type: CONVOLUTION
  bottom: "conv3"
  top: "cccp5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 90
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.04820677
    }
    bias_filler {
      type: "constant"
      value: 0.01
    }
  }
}
layers {
  name: "relu_cccp5"
   type: "PReLU"
  bottom: "cccp5"
  top: "cccp5"
}
layers {
  name: "cccp6"
  type: CONVOLUTION
  bottom: "cccp5"
  top: "cccp6"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 10
    group: 1
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.01
    }
  }
}
layers {
  name: "relu_cccp6"
  type: "PReLU"
  bottom: "cccp6"
  top: "cccp6"
}
layers {
  name: "pool3"
  type: POOLING
  bottom: "cccp6"
  top: "pool3"
  pooling_param {
    pool: AVE
    kernel_size: 8
    stride: 1
  }
}
layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "pool3"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "pool3"
  bottom: "label"
  top: "loss"
}
